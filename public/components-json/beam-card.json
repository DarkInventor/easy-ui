{
  "name": "beam-card",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "framer-motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "beam-card.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { motion, useMotionTemplate, useMotionValue } from \"framer-motion\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface BeamCardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  beamColor?: string\r\n  glowColor?: string\r\n  borderColor?: string\r\n  hoverColor?: string\r\n}\r\n\r\nexport const BeamCard = React.forwardRef<HTMLDivElement, BeamCardProps>(\r\n  (\r\n    {\r\n      className,\r\n      children,\r\n      beamColor = \"#3b82f6\",\r\n      glowColor = \"rgba(59, 130, 246, 0.5)\",\r\n      borderColor = \"bg-gray-300 dark:bg-gray-700\",\r\n      hoverColor = \"rgba(59, 130, 246, 0.2)\",\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [hovered, setHovered] = React.useState(false)\r\n    const mouseX = useMotionValue(0)\r\n    const mouseY = useMotionValue(0)\r\n\r\n    const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\r\n      const rect = e.currentTarget.getBoundingClientRect()\r\n      mouseX.set(e.clientX - rect.left)\r\n      mouseY.set(e.clientY - rect.top)\r\n    }\r\n\r\n    const glowStyle = useMotionTemplate`radial-gradient(\r\n      150px circle at ${mouseX}px ${mouseY}px,\r\n      ${glowColor},\r\n      transparent 80%\r\n    )`\r\n\r\n    return (\r\n      // @ts-ignore\r\n      <motion.div\r\n        ref={ref}\r\n        className={cn(\r\n          \"relative overflow-hidden rounded-xl p-[1px] transition-colors duration-300\",\r\n          \"bg-slate-100 dark:bg-slate-800\",\r\n          className,\r\n        )}\r\n        style={{ background: borderColor }}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseEnter={() => setHovered(true)}\r\n        onMouseLeave={() => setHovered(false)}\r\n        animate={{ background: hovered ? hoverColor : borderColor }}\r\n        {...props}\r\n      >\r\n        <motion.div\r\n          className=\"absolute inset-0 rounded-xl opacity-0 transition-opacity duration-300\"\r\n          style={{ background: glowStyle }}\r\n          animate={{ opacity: hovered ? 1 : 0 }}\r\n        />\r\n        <motion.div\r\n          className=\"absolute inset-0 rounded-xl\"\r\n          style={{\r\n            background: `linear-gradient(90deg, transparent, ${beamColor}, transparent)`,\r\n            opacity: 0.5,\r\n            left: \"-100%\",\r\n          }}\r\n          animate={{\r\n            left: \"100%\",\r\n          }}\r\n          transition={{\r\n            duration: 3,\r\n            repeat: Number.POSITIVE_INFINITY,\r\n            repeatDelay: 1,\r\n          }}\r\n        />\r\n        <div className=\"relative rounded-[11px] bg-white dark:bg-black p-5 md:p-6\">{children}</div>\r\n      </motion.div>\r\n    )\r\n  },\r\n)\r\nBeamCard.displayName = \"BeamCard\"\r\n\r\n",
      "type": "registry:ui"
    }
  ],
  "install": {
    "before": []
  }
}