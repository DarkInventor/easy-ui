{
  "name": "glitch-text",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "glitch-text.tsx",
      "content": "\"use client\"\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\n\r\ninterface GlitchTextProps {\r\n  text: string\r\n  textSize: string\r\n  className?: string\r\n  fontWeight?: React.CSSProperties[\"fontWeight\"]\r\n}\r\n\r\nexport default function GlitchText({\r\n  text,\r\n  textSize,\r\n  className = \"\",\r\n  fontWeight = \"normal\",\r\n}: GlitchTextProps) {\r\n  const [displayedText, setDisplayedText] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    let currentIndex = 0\r\n    const fullText = text\r\n    const typingInterval = setInterval(() => {\r\n      if (currentIndex <= fullText.length) {\r\n        setDisplayedText(fullText.slice(0, currentIndex))\r\n        currentIndex++\r\n      } else {\r\n        clearInterval(typingInterval)\r\n      }\r\n    }, 100)\r\n    return () => clearInterval(typingInterval)\r\n  }, [text])\r\n\r\n  return (\r\n    <div\r\n      className={`glitch-wrapper ${className} dark:text-white text-black`}\r\n      style={{ fontSize: textSize, fontWeight }}\r\n    >\r\n      <div className=\"glitch\" data-text={displayedText}>\r\n        {displayedText}\r\n      </div>\r\n      <style jsx>{`\r\n        .glitch-wrapper {\r\n          width: 100%;\r\n          height: 100vh;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          text-align: center;\r\n          background-color: transparent;\r\n        }\r\n        .glitch {\r\n          position: relative;\r\n          letter-spacing: 3px;\r\n          z-index: 1;\r\n        }\r\n        .glitch:before,\r\n        .glitch:after {\r\n          display: block;\r\n          content: attr(data-text);\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          opacity: 0.8;\r\n        }\r\n        .glitch:before {\r\n          animation: glitch-it 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both\r\n            infinite;\r\n          color: #00ffff;\r\n          z-index: -1;\r\n        }\r\n        .glitch:after {\r\n          animation: glitch-it 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse\r\n            both infinite;\r\n          color: #ff00ff;\r\n          z-index: -2;\r\n        }\r\n        @keyframes glitch-it {\r\n          0% {\r\n            transform: translate(0);\r\n          }\r\n          20% {\r\n            transform: translate(-2px, 2px);\r\n          }\r\n          40% {\r\n            transform: translate(-2px, -2px);\r\n          }\r\n          60% {\r\n            transform: translate(2px, 2px);\r\n          }\r\n          80% {\r\n            transform: translate(2px, -2px);\r\n          }\r\n          to {\r\n            transform: translate(0);\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  )\r\n}\r\n",
      "type": "registry:ui"
    }
  ],
  "install": {
    "before": []
  }
}