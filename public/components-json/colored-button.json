{
  "name": "colored-button",
  "type": "registry:ui",
  "registryDependencies": [
    "button"
  ],
  "dependencies": [
    "framer-motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "colored-button.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { motion } from \"framer-motion\"\nimport { Button } from \"@/components/ui/button\"\nimport type { ButtonProps } from \"@/components/ui/button\"\n\nexport interface RainbowButtonProps extends ButtonProps {\n  rainbowIntensity?: number\n  rainbowDuration?: number\n}\n\nexport function ColoredButton({ children, rainbowIntensity = 1, rainbowDuration = 3, ...props }: RainbowButtonProps) {\n  const [isHovered, setIsHovered] = React.useState(false)\n\n  return (\n    <motion.div\n      className=\"relative inline-block\"\n      onHoverStart={() => setIsHovered(true)}\n      onHoverEnd={() => setIsHovered(false)}\n    >\n      {isHovered && (\n        <motion.div\n          className=\"absolute inset-0 rounded-[0.50rem] z-0\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: rainbowIntensity }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <motion.div\n            className=\"w-full h-full rounded-[0.50rem]\"\n            style={{\n              background: \"linear-gradient(45deg, #ff0000, #ff7f00, #ffff00, #00ff00, #0000ff, #8b00ff)\",\n              backgroundSize: \"400% 400%\",\n            }}\n            animate={{\n              backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n            }}\n            transition={{\n              duration: rainbowDuration,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"linear\",\n            }}\n          />\n        </motion.div>\n      )}\n      <Button\n        {...props}\n        className={`relative z-10 transition-colors duration-300 ${\n          isHovered ? \"bg-transparent hover:bg-transparent\" : \"\"\n        } ${props.className || \"\"}`}\n      >\n        {children}\n      </Button>\n    </motion.div>\n  )\n}\n\n",
      "type": "registry:ui"
    }
  ],
  "install": {
    "before": [
      "npx shadcn@latest add button"
    ]
  }
}