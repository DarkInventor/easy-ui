{
  "name": "colored-button",
  "type": "registry:ui",
  "registryDependencies": [
    "button"
  ],
  "dependencies": [
    "framer-motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "colored-button.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport type { ButtonProps } from \"@/components/ui/button\"\r\n\r\nexport interface RainbowButtonProps extends ButtonProps {\r\n  rainbowIntensity?: number\r\n  rainbowDuration?: number\r\n}\r\n\r\nexport function ColoredButton({ children, rainbowIntensity = 1, rainbowDuration = 3, ...props }: RainbowButtonProps) {\r\n  const [isHovered, setIsHovered] = React.useState(false)\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"relative inline-block\"\r\n      onHoverStart={() => setIsHovered(true)}\r\n      onHoverEnd={() => setIsHovered(false)}\r\n    >\r\n      {isHovered && (\r\n        <motion.div\r\n          className=\"absolute inset-0 rounded-[0.50rem] z-0\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: rainbowIntensity }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <motion.div\r\n            className=\"w-full h-full rounded-[0.50rem]\"\r\n            style={{\r\n              background: \"linear-gradient(45deg, #ff0000, #ff7f00, #ffff00, #00ff00, #0000ff, #8b00ff)\",\r\n              backgroundSize: \"400% 400%\",\r\n            }}\r\n            animate={{\r\n              backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\r\n            }}\r\n            transition={{\r\n              duration: rainbowDuration,\r\n              repeat: Number.POSITIVE_INFINITY,\r\n              ease: \"linear\",\r\n            }}\r\n          />\r\n        </motion.div>\r\n      )}\r\n      <Button\r\n        {...props}\r\n        className={`relative z-10 transition-colors duration-300 ${\r\n          isHovered ? \"bg-transparent hover:bg-transparent\" : \"\"\r\n        } ${props.className || \"\"}`}\r\n      >\r\n        {children}\r\n      </Button>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\n",
      "type": "registry:ui"
    }
  ],
  "install": {
    "before": [
      "npx shadcn@latest add button"
    ]
  }
}