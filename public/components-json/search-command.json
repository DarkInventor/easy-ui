{
  "name": "search-command",
  "type": "registry:ui",
  "registryDependencies": [
    "button",
    "command",
    "commandempty",
    "commandgroup",
    "commandinput",
    "commanditem",
    "commandlist",
    ""
  ],
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "search-command.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\nimport {\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n  CommandIcon,\r\n  HashIcon,\r\n  RotateCcwIcon,\r\n  XIcon,\r\n} from \"lucide-react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n} from \"@/components/ui/command\"\r\n\r\ntype Page = \"main\" | \"tags\" | \"parent\"\r\n\r\ntype TagData = {\r\n  tag: string\r\n  url: string\r\n}\r\n\r\ntype FullFeaturedCommandPaletteProps = {\r\n  tagsData: TagData[]\r\n}\r\n\r\nexport default function SearchCommand({\r\n  tagsData,\r\n}: FullFeaturedCommandPaletteProps) {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [search, setSearch] = React.useState(\"\")\r\n  const [theme] = React.useState<\"light\" | \"dark\">(\"light\")\r\n  const [currentPage, setCurrentPage] = React.useState<Page>(\"main\")\r\n  const [selectedTags, setSelectedTags] = React.useState<string[]>([])\r\n  const [navigationIndex, setNavigationIndex] = React.useState(-1)\r\n\r\n  React.useEffect(() => {\r\n    const down = (e: KeyboardEvent) => {\r\n      if (e.key === \"k\" && (e.metaKey || e.ctrlKey)) {\r\n        e.preventDefault()\r\n        setOpen((open) => !open)\r\n      }\r\n    }\r\n    document.addEventListener(\"keydown\", down)\r\n    return () => document.removeEventListener(\"keydown\", down)\r\n  }, [])\r\n\r\n  const filteredTags = tagsData\r\n    ? tagsData.filter(({ tag }) =>\r\n        tag.toLowerCase().includes(search.toLowerCase())\r\n      )\r\n    : []\r\n\r\n  const handleTagSelect = (tag: string) => {\r\n    setSelectedTags((prev) =>\r\n      prev.includes(tag) ? prev.filter((t) => t !== tag) : [...prev, tag]\r\n    )\r\n  }\r\n\r\n  const handleNavigate = (direction: \"up\" | \"down\") => {\r\n    setNavigationIndex((prev) => {\r\n      if (direction === \"up\") {\r\n        return prev > 0 ? prev - 1 : filteredTags.length - 1\r\n      } else {\r\n        return prev < filteredTags.length - 1 ? prev + 1 : 0\r\n      }\r\n    })\r\n  }\r\n\r\n//   const handleOpen = () => {\r\n//     if (navigationIndex >= 0 && navigationIndex < filteredTags.length) {\r\n//       const tag = filteredTags[navigationIndex].tag\r\n//       handleTagSelect(tag)\r\n//     }\r\n//   }\r\n\r\n//   const handleParent = () => {\r\n//     if (currentPage === \"tags\") {\r\n//       setCurrentPage(\"main\")\r\n//     }\r\n//   }\r\n\r\n  if (!open) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed top-20 py-10 lg:py-20 px-4 left-0 right-0 h-auto flex items-center justify-center transition-colors duration-300 bg-transparent pointer-events-none dark:bg-transparent \">\r\n      <div className=\"pointer-events-auto\">\r\n        <motion.div\r\n          initial={false}\r\n          animate={\r\n            open ? { scale: 1, opacity: 1 } : { scale: 0.95, opacity: 0 }\r\n          }\r\n          transition={{ type: \"spring\", bounce: 0, duration: 0.3 }}\r\n          className=\"relative max-w-sm px-4 lg:w-full md:w-full lg:max-w-3xl md:max-w-xl\"\r\n        >\r\n          <Command className=\"rounded-xl shadow-lg backdrop-blur-xl bg-transparent dark:border-gray-900 dark:border text-black dark:text-gray-100 leading-7 tracking-tight \">\r\n            <div className=\"flex items-center border-b border-1 border-gray-200 dark:border-gray-700 px-3\">\r\n              <CommandInput\r\n                placeholder=\"Type a command or search\"\r\n                value={search}\r\n                onValueChange={setSearch}\r\n                className=\"flex h-14 w-[650px] rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-gray-500 dark:placeholder:text-gray-400 disabled:cursor-not-allowed disabled:opacity-50 tracking-tight leading-7\"\r\n              />\r\n              <kbd className=\"hidden sm:inline-flex h-8 select-none items-center gap-1 rounded p-2 ml-[-20px] mr-2 font-mono text-[12px] font-medium bg-gray-200 dark:bg-gray-900 text-black dark:text-gray-300\">\r\n                {/* âŒ˜K */}\r\n                <CommandIcon className=\"h-3 w-3 bg-transparent text-black dark:text-white\" />\r\n                K\r\n              </kbd>\r\n            </div>\r\n            <CommandList className=\"max-h-[400px] overflow-y-auto overflow-x-hidden p-2\">\r\n              <CommandEmpty className=\"py-6 text-center\">\r\n                <HashIcon className=\"w-12 h-12 mx-auto mb-4 text-gray-600 dark:text-gray-400\" />\r\n                <h3 className=\"text-lg font-semibold mb-1\">No tags found</h3>\r\n                <p className=\"text-sm mb-4 text-gray-600 dark:text-gray-400\">\r\n                  &quot;{search}&quot; did not match any tags currently used in\r\n                  projects. Please try again or create a new tag.\r\n                </p>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  className=\"bg-white hover:bg-gray-100 dark:bg-gray-800 dark:hover:bg-gray-700\"\r\n                  onClick={() => setSearch(\"\")}\r\n                >\r\n                  Clear search\r\n                </Button>\r\n              </CommandEmpty>\r\n              <CommandGroup\r\n                className=\"text-gray-500 font-bold tracking-tight leading-7 \"\r\n                heading=\"Tags\"\r\n              >\r\n                <AnimatePresence>\r\n                  {filteredTags.map(({ tag, url }, index) => (\r\n                    <motion.div\r\n                      key={tag}\r\n                      initial={{ opacity: 0, y: -10 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      exit={{ opacity: 0, y: -10 }}\r\n                      transition={{\r\n                        type: \"spring\",\r\n                        stiffness: 300,\r\n                        damping: 30,\r\n                      }}\r\n                      className=\"font-normal text-md\"\r\n                      onClick={() => (window.location.href = url)}\r\n                    >\r\n                      <CommandItem\r\n                        className={`px-2 py-2 rounded-lg cursor-pointer ${\r\n                          index === navigationIndex\r\n                            ? \"bg-black/10 dark:bg-white/20 text-gray-700 dark:text-white\"\r\n                            : \"\"\r\n                        } hover:bg-black/5 dark:hover:bg-white/10 text-black dark:text-gray-300 transition-colors`}\r\n                      >\r\n                        <a\r\n                          href={url}\r\n                          className={\r\n                            selectedTags.includes(tag) ? \"font-bold\" : \"\"\r\n                          }\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          {tag}\r\n                        </a>\r\n                      </CommandItem>\r\n                    </motion.div>\r\n                  ))}\r\n                </AnimatePresence>\r\n              </CommandGroup>\r\n            </CommandList>\r\n            <div className=\"flex flex-wrap items-center justify-between gap-2 border-t px-2 py-2 text-sm border-gray-200 dark:border-gray-700 text-gray-600 dark:text-gray-400\">\r\n              <div className=\"flex flex-wrap items-center gap-2\">\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"icon\"\r\n                  className=\"h-8 w-8\"\r\n                  onClick={() => setCurrentPage(\"tags\")}\r\n                >\r\n                  <HashIcon className=\"h-4 w-4\" />\r\n                </Button>\r\n                <span className=\"hidden sm:block\">tags</span>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"icon\"\r\n                  className=\"h-8 w-8 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                  onClick={() => handleNavigate(\"up\")}\r\n                >\r\n                  <ChevronUpIcon className=\"h-4 w-4\" />\r\n                </Button>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"icon\"\r\n                  className=\"h-8 w-8 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                  onClick={() => handleNavigate(\"down\")}\r\n                >\r\n                  <ChevronDownIcon className=\"h-4 w-4\" />\r\n                </Button>\r\n                <span className=\"hidden sm:block\">navigate</span>\r\n              </div>\r\n              <div className=\"flex flex-wrap items-center gap-2\">\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"icon\"\r\n                  className=\"h-8 w-8 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                  onClick={() => {\r\n                    setSearch(\"\")\r\n                    setSelectedTags([])\r\n                    setNavigationIndex(-1)\r\n                  }}\r\n                >\r\n                  <RotateCcwIcon className=\"h-4 w-4\" />\r\n                </Button>\r\n                <span className=\"hidden sm:block\">reset</span>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"icon\"\r\n                  className=\"h-8 w-8 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                  onClick={() => setOpen(false)}\r\n                >\r\n                  <XIcon className=\"h-4 w-4\" />\r\n                </Button>\r\n                <span className=\"hidden sm:block mr-2\">close</span>\r\n              </div>\r\n            </div>\r\n          </Command>\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",
      "type": "registry:ui"
    }
  ],
  "install": {
    "before": [
      "npx shadcn@latest add button",
      "npx shadcn@latest add command",
      "npx shadcn@latest add commandempty",
      "npx shadcn@latest add commandgroup",
      "npx shadcn@latest add commandinput",
      "npx shadcn@latest add commanditem",
      "npx shadcn@latest add commandlist",
      "npx shadcn@latest add "
    ]
  }
}