{
  "name": "firefly-button",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "framer-motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "firefly-button.tsx",
      "content": "\"use client\"\n\nimport React from 'react'\nimport { motion } from 'framer-motion'\n\ninterface FireflyButtonProps {\n  text: string;\n  onClick?: () => void;\n  backgroundColor?: string;\n  textColor?: string;\n  glowColor?: string;\n  fireflyCount?: number;\n  fontSize?: string;\n  padding?: string;\n  className?: string;\n}\n\nexport default function FireflyButton({\n  text,\n  onClick,\n  backgroundColor = '#FFEB3B',\n  textColor = '#000000',\n  glowColor = '#FDFCA9',\n  fireflyCount = 7,\n  fontSize = '1rem',\n  padding = '1rem 2rem',\n  className = '',\n}: FireflyButtonProps) {\n  const dotVariants = {\n    hover: { x: 0, y: 0 },\n    initial: (i: number) => ({\n      x: `var(--starting-x-${i})`,\n      y: `var(--starting-y-${i})`\n    })\n  }\n\n  const fireflyVariants = {\n    hover: {\n      opacity: 1,\n      scale: 1.2,\n      transition: {\n        duration: 0.2\n      }\n    },\n    initial: {\n      opacity: 0,\n      scale: 1,\n      transition: {\n        duration: 0.2\n      }\n    }\n  }\n\n  const buttonVariants = {\n    hover: {\n      scale: 1.05,\n      boxShadow: `0px 0px 30px 5px ${glowColor}, 0px 0px 30px 5px ${glowColor} inset`,\n      transition: {\n        duration: 0.3,\n        yoyo: Infinity\n      }\n    },\n    initial: {\n      scale: 1,\n      boxShadow: `0px 0px 24px 0px ${glowColor}, 0px 0px 23px 0px ${glowColor} inset, 0px 0px 8px 0px ${glowColor}42`\n    }\n  }\n\n  return (\n    <motion.button\n      className={`relative inline-block ${className}`}\n      whileHover=\"hover\"\n      initial=\"initial\"\n      onClick={onClick}\n    >\n      {[...Array(fireflyCount)].map((_, i) => (\n        <motion.span\n          key={i}\n          className=\"absolute block\"\n          variants={dotVariants}\n          custom={i + 1}\n          style={{\n            // @ts-ignore\n            '--starting-x-1': '30px',\n            '--starting-y-1': '20px',\n            '--starting-x-2': '40px',\n            '--starting-y-2': '10px',\n            '--starting-x-3': '-10px',\n            '--starting-y-3': '20px',\n            '--starting-x-4': '-30px',\n            '--starting-y-4': '-5px',\n            '--starting-x-5': '-40px',\n            '--starting-y-5': '-20px',\n            '--starting-x-6': '12px',\n            '--starting-y-6': '-18px',\n            '--starting-x-7': '6px',\n            '--starting-y-7': '-20px',\n            width: `${[6, 3, 4, 2, 5, 4, 3][i % 7]}px`,\n            height: `${[6, 3, 4, 2, 5, 4, 3][i % 7]}px`,\n            top: `${[2, 1, -8, 'auto', 'auto', 'auto', 'auto'][i % 7]}px`,\n            bottom: `${['auto', 'auto', 'auto', 4, -6, -12, -16][i % 7]}px`,\n            left: `${[-16, 0, 'auto', 'auto', 'auto', 30, 44][i % 7]}px`,\n            right: `${['auto', 'auto', 14, -14, -3, 'auto', 'auto'][i % 7]}px`,\n            opacity: `${[0.7, 0.7, 1, 0.9, 1, 0.7, 1][i % 7]}`,\n          }}\n        >\n          <motion.span\n            className=\"block w-full h-full rounded-full\"\n            variants={fireflyVariants}\n            style={{\n              backgroundColor: glowColor,\n              boxShadow: `0px 0px 6px 0px ${glowColor}, 0px 0px 4px 0px ${glowColor} inset, 0px 0px 2px 1px ${glowColor}42`\n            }}\n            animate={{\n              x: [0, 3, -2, 2, -1, 0, -3, 0],\n              y: [0, 1, 3, -2, 0, 2, -1, 0],\n              transition: {\n                duration: [14, 16, 20, 18, 22, 15, 19][i % 7],\n                repeat: Infinity,\n                ease: 'linear'\n              }\n            }}\n          />\n        </motion.span>\n      ))}\n      <motion.span\n        className=\"relative z-10 inline-block rounded-full\"\n        variants={buttonVariants}\n        style={{\n          backgroundColor,\n          color: textColor,\n          padding,\n          fontSize,\n        }}\n      >\n        {text}\n      </motion.span>\n    </motion.button>\n  )\n}",
      "type": "registry:ui"
    }
  ],
  "install": {
    "before": []
  }
}