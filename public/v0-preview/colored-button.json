  {
    "name": "colored-ColoredButton",
    "type": "registry:ui",
    "registryDependencies": ["https://ui.shadcn.com/registry/styles/new-york/button.json"],
    "files": [
      {
        "path": "components/ui/colored-button.tsx",
        "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { motion } from \"framer-motion\"\nimport { Button } from \"@/components/ui/button\"\nimport type { ButtonProps } from \"@/components/ui/button\"\n\nexport interface RainbowButtonProps extends ButtonProps {\n  rainbowIntensity?: number\n  rainbowDuration?: number\n}\n\nexport function ColoredButton({ children, rainbowIntensity = 1, rainbowDuration = 3, ...props }: RainbowButtonProps) {\n  const [isHovered, setIsHovered] = React.useState(false)\n\n  return (\n    <motion.div\n      className=\"relative inline-block\"\n      onHoverStart={() => setIsHovered(true)}\n      onHoverEnd={() => setIsHovered(false)}\n    >\n      {isHovered && (\n        <motion.div\n          className=\"absolute inset-0 rounded-[0.50rem] z-0\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: rainbowIntensity }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <motion.div\n            className=\"w-full h-full rounded-[0.50rem]\"\n            style={{\n              background: \"linear-gradient(45deg, #ff0000, #ff7f00, #ffff00, #00ff00, #0000ff, #8b00ff)\",\n              backgroundSize: \"400% 400%\",\n            }}\n            animate={{\n              backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n            }}\n            transition={{\n              duration: rainbowDuration,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"linear\",\n            }}\n          />\n        </motion.div>\n      )}\n      <Button\n        {...props}\n        className={`relative z-10 transition-colors duration-300 ${\n          isHovered ? \"bg-transparent hover:bg-transparent\" : \"\"\n        } ${props.className || \"\"}`}\n      >\n        {children}\n      </Button>\n    </motion.div>\n  )\n}\n\n",
        "type": "registry:ui",
        "target": "components/ui/colored-button.tsx"
      },
      { 
        "path": "page.tsx",
        "content": "import { ColoredButton } from \"@/components/ui/colored-button\"\nimport React from 'react'\n\nfunction Home() {\n  return (\n       <div className=\"px-4 py-3 flex items-center justify-between\">\n            <main className=\"flex min-h-screen flex-col items-center justify-center gap-4 p-24\">\n                <ColoredButton className=\"rounded-[0.50rem]\">Default Rainbow Button</ColoredButton>\n                <ColoredButton className=\"rounded-[0.50rem]\" variant=\"secondary\">Secondary Variant</ColoredButton>\n                <ColoredButton className=\"rounded-[0.50rem]\" variant=\"destructive\">Destructive Variant</ColoredButton>\n                <ColoredButton className=\"rounded-[0.50rem]\" variant=\"outline\">Outline Variant</ColoredButton>\n                <ColoredButton className=\"rounded-[0.50rem]\" variant=\"ghost\">Ghost Variant</ColoredButton>\n                <ColoredButton className=\"rounded-[0.50rem]\" size=\"sm\">Small Size</ColoredButton>\n                <ColoredButton className=\"rounded-[0.50rem]\" size=\"lg\">Large Size</ColoredButton>\n                <ColoredButton className=\"rounded-[0.50rem]\" disabled>Disabled Button</ColoredButton>\n                <ColoredButton className=\"rounded-[0.50rem]\" rainbowIntensity={0.5} rainbowDuration={5}>\n                    Custom Rainbow (50% intensity, 5s duration)\n                </ColoredButton>\n            </main>\n        </div>\n  )\n}\n\nexport default Home",
        "type": "registry:component",
        "target": "page.tsx"
      }
    ],
    "author": "Kathan Mehta<ktmehta25@gmail.com>",
    "title": "Colored Button"
  }