{
  "name": "file-upload-card",
  "type": "registry:ui",
  "registryDependencies": ["https://ui.shadcn.com/registry/styles/new-york/button.json", "https://ui.shadcn.com/registry/styles/new-york/card.json", "https://ui.shadcn.com/registry/styles/new-york/progress.json"],
  "files": [
    {
      "path": "components/ui/file-upload.tsx",
      "content": "\"use client\"\n\nimport type React from \"react\"\nimport { useState, useRef } from \"react\"\nimport { Upload, FileUp, Share2, Loader2, X, Image, File, UploadCloudIcon, Video } from \"lucide-react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Button } from \"@/components/ui/button\"\n\nconst FileUploadZone = () => {\n  const [draggedZone, setDraggedZone] = useState<number | null>(null)\n  const [files, setFiles] = useState<File[]>([])\n  const [uploading, setUploading] = useState(false)\n  const [progress, setProgress] = useState(0)\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  const handleDragEnter = (index: number) => (e: React.DragEvent) => {\n    e.preventDefault()\n    setDraggedZone(index)\n  }\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    e.preventDefault()\n    setDraggedZone(null)\n  }\n\n  const simulateUpload = async (newFiles: File[]) => {\n    setUploading(true)\n    setProgress(0)\n\n    for (let i = 0; i <= 100; i += 10) {\n      await new Promise((resolve) => setTimeout(resolve, 200))\n      setProgress(i)\n    }\n\n    setFiles((prevFiles) => [...prevFiles, ...newFiles])\n    setUploading(false)\n  }\n\n  const handleDrop = (index: number) => async (e: React.DragEvent) => {\n    e.preventDefault()\n    setDraggedZone(null)\n    const droppedFiles = Array.from(e.dataTransfer.files)\n    if (droppedFiles.length > 0) {\n      await simulateUpload(droppedFiles)\n    }\n  }\n\n  const handleFileSelect = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFiles = Array.from(e.target.files || [])\n    if (selectedFiles.length > 0) {\n      await simulateUpload(selectedFiles)\n    }\n  }\n\n  const removeFile = (index: number) => {\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index))\n  }\n\n  const zones = [\n    {\n      title: \"Upload Images\",\n      subtitle: \"Drop images here\",\n      icon: Image,\n      gradient: \"from-purple-400 via-pink-500 to-red-500\",\n      rotate: \"-rotate-2\",\n    },\n    {\n      title: \"Upload Videos\",\n      subtitle: \"Drop videos here\",\n      icon: Video,\n      gradient: \"from-blue-400 via-teal-500 to-green-500\",\n      rotate: \"\",\n    },\n    {\n      title: \"Upload Files\",\n      subtitle: \"Drop files here\",\n      icon: UploadCloudIcon,\n      gradient: \"from-yellow-400 via-orange-500 to-red-500\",\n      rotate: \"rotate-3\",\n    },\n  ]\n\n  return (\n    <Card className=\"mx-auto w-full max-w-[300px] lg:max-w-[500px] overflow-hidden rounded-[1rem]\">\n      <CardContent className=\"p-6 py-10 cursor:pointer\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6\">\n          {zones.map((zone, index) => (\n            <div key={index} className={`relative ${zone.rotate}`}>\n              <motion.div\n                onDragEnter={handleDragEnter(index)}\n                onDragOver={(e: { preventDefault: () => any }) => e.preventDefault()}\n                onDragLeave={handleDragLeave}\n                onDrop={handleDrop(index)}\n                whileHover={{ y: -4, scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                className=\"group relative h-full\"\n              >\n                <div\n                  className={`\n                    absolute inset-0 -z-10 rounded-xl bg-gradient-to-br ${zone.gradient}\n                    opacity-0 blur-md transition-opacity duration-300\n                    ${draggedZone === index ? \"opacity-70\" : \"group-hover:opacity-70\"}\n                  `}\n                />\n                <Card className=\"relative h-full rounded-[1rem] overflow-hidden border-2 border-dashed border-gray-200 dark:border-gray-800 transition-colors duration-300 group-hover:border-transparent\">\n                  <CardContent className=\"flex h-full flex-col items-center justify-center p-6 text-center\">\n                    <motion.div\n                      whileHover={{ scale: 1.1, rotate: 10 }}\n                      className=\"rounded-full bg-gray-100 dark:bg-gray-800 p-3 mb-4\"\n                    >\n                      <zone.icon className=\"h-8 w-8 text-gray-500\" />\n                    </motion.div>\n                    <h3 className=\"mb-1 text-sm font-medium\">{zone.title}</h3>\n                    <p className=\"text-xs text-gray-500\">{zone.subtitle}</p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n          ))}\n        </div>\n\n        {(uploading || files.length > 0) && (\n          <div className=\"mb-6\">\n            <Progress value={uploading ? progress : 100} className=\"h-2 mb-2\" />\n            <p className=\"text-sm text-gray-500 mb-2\">\n              {uploading ? `Uploading... ${progress}%` : `${files.length} file(s) uploaded`}\n            </p>\n            <AnimatePresence>\n              {files.map((file, index) => (\n                <motion.div\n                  key={`${file.name}-${index}`}\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -10 }}\n                  className=\"flex items-center justify-between bg-gray-100 dark:bg-gray-800 rounded-[1rem] p-2 mb-2\"\n                >\n                  <span className=\"truncate max-w-[80%] text-sm text-gray-700 dark:text-gray-300 ml-2\">{file.name}</span>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => removeFile(index)}\n                    className=\"h-6 w-6 p-0 hover:bg-gray-200 dark:hover:bg-gray-700\"\n                  >\n                    <X className=\"h-4 w-4\" />\n                  </Button>\n                </motion.div>\n              ))}\n            </AnimatePresence>\n          </div>\n        )}\n\n        <div className=\"text-center\">\n          <input type=\"file\" ref={fileInputRef} onChange={handleFileSelect} className=\"hidden\" multiple />\n          <Button\n            onClick={() => fileInputRef.current?.click()}\n            // className=\"bg-gradient-to-r from-blue-500 to-teal-500 text-white hover:from-blue-600 hover:to-teal-600\"\n            disabled={uploading}\n            className=\"rounded-[1rem] mt-5\"\n          >\n            {uploading ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                Uploading...\n              </>\n            ) : (\n              <>\n                <Upload className=\"mr-2 h-4 w-4\" />\n                Choose Files\n              </>\n            )}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default FileUploadZone\n\n",
      "type": "registry:ui",
      "target": "components/ui/file-upload.tsx"
    },
    {
      "path": "page.tsx",
      "content": "import FileUploadZone from \"@/components/easyui/file-upload-card\"\nimport React from 'react'\n\nfunction Home() {\n  return (\n      <FileUploadZone />\n  )\n}\n\nexport default Home",
      "type": "registry:component",
      "target": "page.tsx"
    }
  ],
  "author": "Kathan Mehta<ktmehta25@gmail.com>",
  "title": "File Upload"
}