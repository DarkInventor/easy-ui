{
  "name": "sparkle-button",
  "type": "registry:ui",
  "registryDependencies": ["https://ui.shadcn.com/registry/styles/new-york/button.json"],
  "files": [
    {
      "path": "components/ui/transaction-list.tsx",
       "content": "\"use client\"\n\nimport { useState, type ReactNode } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { X, ChevronRight } from \"lucide-react\"\n\ninterface Transaction {\n  id: string\n  icon: ReactNode\n  title: string\n  subtitle: string\n  amount: string\n  transactionId: string\n  date: string\n  time: string\n  paymentMethod: string\n  paymentInfo: string\n}\n\ninterface TransactionListProps {\n  transactions: Transaction[]\n  title?: string\n  maxHeight?: string\n  showAllTransactionsButton?: boolean\n  onAllTransactionsClick?: () => void\n  className?: string\n  containerClassName?: string\n  headerClassName?: string\n  transactionClassName?: string\n  iconClassName?: string\n  titleClassName?: string\n  subtitleClassName?: string\n  amountClassName?: string\n  allTransactionsButtonClassName?: string\n  popupClassName?: string\n  popupHeaderClassName?: string\n  popupCloseButtonClassName?: string\n  popupContentClassName?: string\n  popupIconClassName?: string\n  popupTitleClassName?: string\n  popupSubtitleClassName?: string\n  popupAmountClassName?: string\n  popupDetailsClassName?: string\n  renderPopupContent?: (transaction: Transaction) => ReactNode\n}\n\nfunction TransactionPopup({\n  transaction,\n  onClose,\n  className,\n  headerClassName,\n  closeButtonClassName,\n  contentClassName,\n  iconClassName,\n  titleClassName,\n  subtitleClassName,\n  amountClassName,\n  detailsClassName,\n  renderContent,\n}: {\n  transaction: Transaction | null\n  onClose: () => void\n  className?: string\n  headerClassName?: string\n  closeButtonClassName?: string\n  contentClassName?: string\n  iconClassName?: string\n  titleClassName?: string\n  subtitleClassName?: string\n  amountClassName?: string\n  detailsClassName?: string\n  renderContent?: (transaction: Transaction) => ReactNode\n}) {\n  if (!transaction) return null\n\n  return (\n    <motion.div\n      className=\"fixed inset-0 bg-black/50 dark:bg-white/10 backdrop-blur-sm flex items-center justify-center p-4 z-50 \"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <motion.div\n        className={`bg-white dark:bg-black text-black dark:text-white rounded-[1rem] p-6 w-full max-w-md mx-4 shadow-xl ${className}`}\n        initial={{ scale: 0.9, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        exit={{ scale: 0.9, opacity: 0 }}\n        transition={{ type: \"spring\", damping: 25, stiffness: 300 }}\n      >\n        {renderContent ? (\n          renderContent(transaction)\n        ) : (\n          <>\n            <div className={`flex justify-between items-center mb-6 ${headerClassName} `}>\n              <h2 className=\"text-2xl font-semibold\">Transaction Details</h2>\n              <button\n                onClick={onClose}\n                className={`text-black hover:text-gray-700 dark:text-white dark:hover:text-gray-300 ${closeButtonClassName}`}\n              >\n                <X className=\"w-6 h-6\" />\n              </button>\n            </div>\n            <div className={`space-y-6 ${contentClassName} `}>\n              <div className=\"flex items-center gap-4\">\n                <div\n                  className={`icon w-14 h-14 bg-background border text-black dark:bg-white dark:text-black rounded-2xl grid place-items-center flex-shrink-0 ${iconClassName}`}\n                >\n                  {transaction.icon}\n                </div>\n                <div>\n                  <div className={`font-medium text-lg ${titleClassName}`}>{transaction.title}</div>\n                  <div className={`text-sm text-gray-600 dark:text-gray-400 ${subtitleClassName}`}>\n                    {transaction.subtitle}\n                  </div>\n                </div>\n              </div>\n              <div className={`text-3xl font-bold ml-5 tracking-tight leading-7 ${amountClassName}`}>{transaction.amount}</div>\n              <div className={`space-y-2 text-base dark:text-gray-200 ml-5 ${detailsClassName}`}>\n                <p>Transaction ID: {transaction.transactionId}</p>\n                <p>Date: {transaction.date}</p>\n                <p>Time: {transaction.time}</p>\n                <p>{transaction.paymentMethod}</p>\n                <p>{transaction.paymentInfo}</p>\n              </div>\n            </div>\n          </>\n        )}\n      </motion.div>\n    </motion.div>\n  )\n}\n\nexport function TransactionListCard({\n  transactions,\n  title = \"Transactions\",\n  maxHeight = \"none\",\n  showAllTransactionsButton = true,\n  onAllTransactionsClick = () => {},\n  className = \"\",\n  containerClassName = \"\",\n  headerClassName = \"\",\n  transactionClassName = \"\",\n  iconClassName = \"\",\n  titleClassName = \"\",\n  subtitleClassName = \"\",\n  amountClassName = \"\",\n  allTransactionsButtonClassName = \"\",\n  popupClassName = \"\",\n  popupHeaderClassName = \"\",\n  popupCloseButtonClassName = \"\",\n  popupContentClassName = \"\",\n  popupIconClassName = \"\",\n  popupTitleClassName = \"\",\n  popupSubtitleClassName = \"\",\n  popupAmountClassName = \"\",\n  popupDetailsClassName = \"\",\n  renderPopupContent,\n}: TransactionListProps) {\n  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null)\n\n  const handleTransactionClick = (transaction: Transaction) => {\n    if (typeof document.startViewTransition === \"function\") {\n      document.startViewTransition(() => {\n        setSelectedTransaction(transaction)\n      })\n    } else {\n      setSelectedTransaction(transaction)\n    }\n  }\n\n  return (\n    <div\n      className={`container bg-white dark:bg-background text-black dark:text-white rounded-2xl p-6 w-full max-w-[400px] mx-auto border border-gray-200 dark:border-gray-900 ${className} ${containerClassName}`}\n    >\n      <h2 className={`text-2xl font-bold mb-6 ml-5 ${headerClassName}`}>{title}</h2>\n      <div className=\"space-y-4\" style={{ maxHeight, overflowY: \"auto\" }}>\n        <AnimatePresence>\n          {transactions.map((transaction) => (\n            <motion.div\n              key={transaction.id}\n              className={`flex items-center gap-4 p-4 rounded-2xl cursor-pointer hover:bg-gray-100 dark:hover:bg-opacity-10 transition-colors duration-200 ${transactionClassName}`}\n              onClick={() => handleTransactionClick(transaction)}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div\n                className={`icon w-12 h-12 bg-background border text-white dark:bg-white dark:text-black rounded-2xl grid place-items-center flex-shrink-0 ${iconClassName}`}\n              >\n                {transaction.icon}\n              </div>\n              <div className=\"flex-grow\">\n                <div className={`font-medium ${titleClassName}`}>{transaction.title}</div>\n                <div className={`text-sm text-gray-600 dark:text-gray-400 ${subtitleClassName}`}>\n                  {transaction.subtitle}\n                </div>\n              </div>\n              <div className={`font-medium ${amountClassName}`}>{transaction.amount}</div>\n            </motion.div>\n          ))}\n        </AnimatePresence>\n      </div>\n      {showAllTransactionsButton && (\n        <button\n          onClick={onAllTransactionsClick}\n          className={`w-full mt-6 py-2 text-center font-medium bg-background rounded-2xl  flex items-center justify-center ${allTransactionsButtonClassName}`}\n        >\n          All Transactions\n          <ChevronRight className=\"ml-2 w-5 h-5\" />\n        </button>\n      )}\n      <AnimatePresence>\n        {selectedTransaction && (\n          <TransactionPopup\n            transaction={selectedTransaction}\n            onClose={() => setSelectedTransaction(null)}\n            className={popupClassName}\n            headerClassName={popupHeaderClassName}\n            closeButtonClassName={popupCloseButtonClassName}\n            contentClassName={popupContentClassName}\n            iconClassName={popupIconClassName}\n            titleClassName={popupTitleClassName}\n            subtitleClassName={popupSubtitleClassName}\n            amountClassName={popupAmountClassName}\n            detailsClassName={popupDetailsClassName}\n            renderContent={renderPopupContent}\n          />\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n\n",
      "type": "registry:ui",
      "target": "components/ui/transaction-list.tsx"
    },
    {
      "path": "page.tsx",
      "content": "import { TransactionListCard } from \"@/components/ui/transaction-list\"\nimport React from 'react'\nimport { CreditCard, MapPin, Plus } from 'lucide-react'\n\nconst transactions = [\n    {\n      id: \"1\",\n      icon: <CreditCard className=\"w-5 h-5 text-black\" />,\n      title: \"Netflix\",\n      subtitle: \"Subscription\",\n      amount: \"-$6.99\",\n      transactionId: \"#67593\",\n      date: \"September 26\",\n      time: \"12:01 am\",\n      paymentMethod: \"Paid Via Credit Card\",\n      paymentInfo: \"XXXX 9342 VISA\",\n    },\n    {\n      id: \"2\",\n      icon: <MapPin className=\"w-5 h-5 text-black\" />,\n      title: \"Verizon\",\n      subtitle: \"Mobile Recharge\",\n      amount: \"-$4.05\",\n      transactionId: \"#67482\",\n      date: \"September 24\",\n      time: \"05:18 pm\",\n      paymentMethod: \"Paid Via Credit Card\",\n      paymentInfo: \"XXXX 2316 Mastercard\",\n    },\n    {\n      id: \"3\",\n      icon: <Plus className=\"w-5 h-5 text-black\" />,\n      title: \"Big Belly Burger\",\n      subtitle: \"Restaurant\",\n      amount: \"-$12.05\",\n      transactionId: \"#52342\",\n      date: \"September 12\",\n      time: \"09:06 am\",\n      paymentMethod: \"Paid Via Credit Card\",\n      paymentInfo: \"XXXX 2316 Mastercard\",\n    },\n  ]\n\nfunction Home() {\n  return (\n      <TransactionListCard\n          transactions={transactions}\n          title=\"Recent Activity\"\n          maxHeight=\"600px\"\n          showAllTransactionsButton={true}\n          onAllTransactionsClick={() => alert(\"View all transactions clicked\")} \n          iconClassName=\"!text-black  dark:text-white\"\n          allTransactionsButtonClassName=\"bg-black border text-white dark:bg-white dark:text-black hover:bg-opacity-90 dark:hover:bg-opacity-90\"\n      />\n  )\n}\n\nexport default Home",
      "type": "registry:component",
      "target": "page.tsx"
    }
  ],
  "author": "Kathan Mehta<ktmehta25@gmail.com>",
  "title": "Transaction List"
}